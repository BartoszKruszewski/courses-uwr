Lemat 1:
W drzewach nie ma cykli, 
więc istnieje tylko jedna ścieżka pomiędzy każdą parą wierchołków.

dp[v1][v2] = odległość v1 od v2

def dfs(start, v):
    for u in G[v]:
        if not dp[start][u]:
            dp[start][u] = dp[start][v] + c(u)
            dfs(start, u)

for v in G:
    dfs(v, v)

res = 0
for v1 in range(n):
    for v2 in range(n):
        if dp[v1][v2] == C:
            res += 1

return res / 2 # bo zliczamy przypadki u -> v oraz v -> u, a to jedna para